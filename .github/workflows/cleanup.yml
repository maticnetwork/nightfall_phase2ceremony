# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
name: 'Cleanup'

on:
  pull_request:
    types: [closed]
  workflow_dispatch:

jobs:
  destroy_workspace:
    runs-on: ubuntu-latest
    name: Destroy terraform workspace
    env:
      TERRAFORM_CLOUD_TOKENS: app.terraform.io=${{ secrets.TF_API_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up S3cmd cli tool
        uses: s3-actions/s3cmd@v1.2.0
        with:
          provider: aws # default is linode
          region: 'eu-west-2'
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # If pull request, use head_ref
      - name: Recursively remove this s3 bucket folder
        if: github.event_name == 'pull_request'
        run: |
          s3cmd rm --recursive --force s3://mpc-${{ github.head_ref }}/

      - name: terraform destroy
        uses: dflook/terraform-destroy-workspace@v1
        if: github.event_name == 'pull_request'
        with:
          variables: |
            BRANCH = "${{ github.head_ref }}"
            COMMITHASH = "${{ github.sha }}"
            AUTH_KEY = "${{ secrets.AUTH_KEY }}"
          path: terraform
          workspace: ${{ github.head_ref }}

      # If workflow dispatch, use ref_name
      - name: Recursively remove this s3 bucket folder
        if: github.event_name == 'workflow_dispatch'
        run: |
          s3cmd rm --recursive --force s3://mpc-${{ github.ref_name }}/

      - name: terraform destroy
        uses: dflook/terraform-destroy-workspace@v1
        if: github.event_name == 'workflow_dispatch'
        with:
          variables: |
            BRANCH = "${{ github.ref_name }}"
            COMMITHASH = "${{ github.sha }}"
            AUTH_KEY = "${{ secrets.AUTH_KEY }}"
          path: terraform
          workspace: ${{ github.ref_name }}
